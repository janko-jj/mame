name: CI (Windows)

on:
  push:
    paths:
    - '.github/workflows/**'
    - '3rdparty/**'
    - 'scripts/**'
    - 'src/**'
    - 'COPYING'
    - 'makefile'
  pull_request:
    paths:
    - '.github/workflows/**'
    - '3rdparty/**'
    - 'scripts/**'
    - 'src/**'
    - 'COPYING'
    - 'makefile'

permissions:
  contents: read

jobs:
  build-windows:
    strategy:
      matrix:
        # compiler: [gcc-x64, clang-x64, clang-arm64]
        compiler: [gcc-x64]
        include:
          - compiler: gcc-x64
            os: windows-latest
            msys: MINGW64
            slug: mingw-w64-x86_64
            cc: gcc
            cxx: g++
            subtarget: mame
            executable: mame
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msys }}
        install: git make ccache ${{ matrix.slug }}-${{ matrix.cc }} ${{ matrix.slug }}-python ${{ matrix.slug }}-lld ${{ matrix.slug }}-llvm ${{ matrix.slug }}-libc++ ${{ matrix.extrapkg }}
    - uses: actions/checkout@main
      with:
        fetch-depth: 0  
    - name: Setup ccache and symlink compilers to ccache
      shell: msys2 {0}
      run: |
        echo "export CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
        echo "$HOME/bin:$PATH" >> $GITHUB_PATH
        ccache --max-size=400M
        mkdir bin
        cp /mingw64/bin/ccache.exe bin/ccache.exe
        cd bin
        ln -s ccache.exe cc.exe
        ln -s ccache.exe gcc.exe
        ln -s ccache.exe c++.exe
        ln -s ccache.exe g++.exe
        ln -s ccache.exe x86_64-w64-mingw32-cc.exe
        ln -s ccache.exe x86_64-w64-mingw32-gcc.exe
        ln -s ccache.exe x86_64-w64-mingw32-c++.exe
        ln -s ccache.exe x86_64-w64-mingw32-g++.exe
        ln -s ccache.exe x86_64-w64-mingw32-gcc-15.2.0.exe
        cd ..
      # Restore ccache
    - name: Restore ccache
      uses: actions/cache@v4
      with:
          path: ~/.ccache
          key: msys2-ccache-${{ github.sha }}
          restore-keys: |
            msys2-ccache-
    - name: Build
      env:
        OVERRIDE_AR: "llvm-ar"
        OVERRIDE_CC: ${{ matrix.cc }}
        OVERRIDE_CXX: ${{ matrix.cxx }}
        ARCHOPTS: "-fuse-ld=lld"
        SUBTARGET: ${{ matrix.subtarget }}
        TOOLS: 1
      run: make -j3
    - name: Validate
      run: ./${{ matrix.executable }}.exe -validate
    - uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.executable }}-windows-${{ matrix.compiler }}-${{ github.sha }}
        path: |
          ${{ matrix.executable }}.exe
          chdman.exe
          unidasm.exe
        if-no-files-found: error
